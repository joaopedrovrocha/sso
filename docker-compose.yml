services:
  sso-api:
    container_name: sso-api
    build:
      context: sso-api
    volumes:
      - ./sso-api/:/app
      - ./sso-api/node_modules:/app/node_modules
    ports:
      - $API_PORT:$API_PORT
    restart: always
    expose:
      - $API_PORT
    command: npm run dev
    env_file:
      - ./sso-api/.env
    depends_on:
      - sso-db
      - sso-redis
    networks:
      - sso

  sso-db:
    container_name: sso-database
    image: postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./sso-api/db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - sso

  sso-redis:
    container_name: sso-redis
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - sso

  sso-ui:
    container_name: sso-ui
    build:
      context: sso-ui
    volumes:
      - ./sso-ui/:/app
      - ./sso-ui/node_modules:/app/node_modules
    ports:
      - $UI_PORT:$UI_PORT
    command: npm start
    expose:
      - $UI_PORT
    env_file:
      - ./sso-ui/.env
    depends_on:
      - sso-api
    networks:
      - sso

  platform-one:
    container_name: platform-one
    build:
      context: platform-one
    volumes:
      - ./platform-one/:/app
      - ./platform-one/node_modules:/app/node_modules
    ports:
      - $P1_PORT:$P1_PORT
    command: npm start
    expose:
      - $P1_PORT
    env_file:
      - ./platform-one/.env
    depends_on:
      - sso-api
    networks:
      - sso

  platform-two:
    container_name: platform-two
    build:
      context: platform-two
    volumes:
      - ./platform-two/:/app
      - ./platform-two/node_modules:/app/node_modules
    ports:
      - $P2_PORT:$P2_PORT
    command: npm start
    expose:
      - $P2_PORT
    env_file:
      - ./platform-two/.env
    depends_on:
      - sso-api
    networks:
      - sso

networks:
  sso:


volumes:
  db_data:
